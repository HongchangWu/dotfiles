# A nice online converter https://geoff.greer.fm/lscolors/
export LS_COLORS="di=1;34:ln=1;36:so=1;32:pi=1;33:ex=1;32:bd=34;46:cd=34;43:su=30;41:sg=30;46:tw=30;42:ow=34;43"
[[ $(uname -s) = Darwin ]] && export CLICOLOR=1
[[ $(uname -s) = Darwin ]] && export LSCOLORS=ExGxCxDxCxegedabagaced

# Homebrew
PATH=$(sed -e 's#/usr/local/bin:##' <<<$PATH)
export PATH=/usr/local/bin:$PATH

# Nix
[[ -e "$HOME/.nix-profile/etc/profile.d/nix.sh" ]] && source "$HOME/.nix-profile/etc/profile.d/nix.sh"

[[ -d "$HOME/.local" ]] && export PATH="$HOME/.local/bin:$PATH"

# Aliases
[[ -r "$HOME/.aliases" ]] && source "$HOME/.aliases"

# Functions
[[ -r "$HOME/.functions" ]] && source "$HOME/.functions"


if grep -qEi "(Microsoft|WSL)" /proc/version &> /dev/null ; then
  export DISPLAY=$(awk '/nameserver / {print $2; exit}' /etc/resolv.conf 2>/dev/null):0
  export LIBGL_ALWAYS_INDIRECT=1
fi

# Use ssh-agent to manage SSH keys
# http://mah.everybody.org/docs/ssh
ssh_env="$HOME/.ssh/env"

function start_agent {
  echo "Initializing new SSH agent..."
  ssh-agent | sed 's/^echo/#echo/' > "${ssh_env}"
  chmod 600 "${ssh_env}"
  . "${ssh_env}" > /dev/null
  ssh-add;
}

# Source SSH settings, if applicable

if [[ -f "${ssh_env}" ]]; then
  . "${ssh_env}" > /dev/null
  #ps ${SSH_AGENT_PID} doesn't work under cywgin
  ps -ef | grep ${SSH_AGENT_PID} | grep ssh-agent$ > /dev/null || {
      start_agent;
  }
else
  start_agent;
fi

unset ssh_env

# ---------------------------------------
# Beginning of language specific settings
# ---------------------------------------

# Ruby
[[ -d "$HOME/.rbenv" ]] && export PATH="$HOME/.rbenv/bin:$PATH"
exists rbenv && eval "$(rbenv init -)"

# Node JS
[[ -d "$HOME/.npm-global" ]] && export PATH="$HOME/.npm-global/bin:$PATH"

# Q
[[ -d "$HOME/q" ]] && export QHOME="$HOME/q"
[[ -d "$QHOME/m32" ]] && export PATH="$PATH:$QHOME/m32"

# OCaml
[[ -s "$HOME/.opam/opam-init/init.sh" ]] && $HOME/.opam/opam-init/init.sh >/dev/null 2>&1 || true
exists opam && eval $(opam config env)

# Haskell
[ -f "${GHCUP_INSTALL_BASE_PREFIX:=$HOME}/.ghcup/env" ] && source "${GHCUP_INSTALL_BASE_PREFIX:=$HOME}/.ghcup/env"

# Rust
[[ -d "$HOME/.cargo" ]] && export PATH="$HOME/.cargo/bin:$PATH"

# Cask
[[ -d "$HOME/.cask" ]] && export PATH=$HOME/.cask/bin:$PATH

# Python
export PYENV_ROOT="$HOME/.pyenv"
[[ -d $PYENV_ROOT ]] && export PATH="$PYENV_ROOT/bin:$PATH"

# ---------------------------------
# End of language specific settings
# ---------------------------------
