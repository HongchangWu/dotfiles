#!/usr/bin/env bash

git_branch()
{
  git symbolic-ref --short HEAD 2>/dev/null
}

git_branch_exists()
{
  git show-ref refs/heads/$1 --quiet --verify
}

git_branch_for_prompt()
{
  local branch=$(git_branch)
  [[ -z $branch ]] || echo "[$branch]"
}

git_is_repository()
{
  git rev-parse --is-inside-work-tree 1>/dev/null
}

prompt()
{
  if exists powerline-shell.py
  then
    PS1="$(powerline-shell.py $? 2> /dev/null)"
  else
    PS1="\[\e[32;1m\]\u\[\e[0m\]@\[\e[35;1m\]\h\[\e[0m\]:\[\e[34;1m\]\W\[\e[32;1m\]\$(git_branch_for_prompt)\[\e[0m\]\$ "
  fi
}

exists()
{
  command -v "$1" >/dev/null 2>&1
}

remove_from_path()
{
  export PATH=$(echo $PATH | sed -E -e "s;:$1;;" -e "s;$1:?;;")
}

setjdk()
{
  if [ $# -ne 0 ]
  then
    remove_from_path '/System/Library/Frameworks/JavaVM.framework/Home/bin'
    if [ -n "${JAVA_HOME+x}" ]
    then
      remove_from_path $JAVA_HOME
    fi
    export JAVA_HOME=$(/usr/libexec/java_home -v $@)
    export PATH=$JAVA_HOME/bin:$PATH
  fi
}
